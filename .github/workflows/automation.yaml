name: automation
on: [ pull_request ]

jobs:
  automation-tests:
    name: Automation Tests
    runs-on: ubuntu-latest
    steps:

      - name: Log Actor
        run: echo "${{ github.actor }}"

      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup paths
        run: |
          mkdir -p automation/src/test/resources/accounts
          mkdir -p target

      - name: Render configs
        env:
          CONFIG: ${{ secrets.DUOS_AUTOMATION_CONFIG }}
          ADMIN: ${{ secrets.DUOS_AUTOMATION_ADMIN }}
          CHAIR: ${{ secrets.DUOS_AUTOMATION_CHAIR }}
          MEMBER: ${{ secrets.DUOS_AUTOMATION_MEMBER }}
          RESEARCHER: ${{ secrets.DUOS_AUTOMATION_RESEARCHER }}
          SIGNING_OFFICIAL: ${{ secrets.DUOS_AUTOMATION_SIGNING_OFFICIAL }}
        run: |
          echo "$ADMIN" >> ./automation/src/test/resources/accounts/duos-automation-admin.json
          echo "$CHAIR" >> ./automation/src/test/resources/accounts/duos-automation-chair.json
          echo "$MEMBER" >> ./automation/src/test/resources/accounts/duos-automation-member.json
          echo "$RESEARCHER" >> ./automation/src/test/resources/accounts/duos-automation-researcher.json
          echo "$SIGNING_OFFICIAL" >> ./automation/src/test/resources/accounts/duos-automation-signing-official.json
          echo "$CONFIG" >> ./automation/src/test/resources/application.conf
          echo '<?xml version="1.0" encoding="UTF-8"?><configuration><appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender"><encoder><pattern>[DEV] %d{HH:mm:ss.SSS} [%-5level] %logger{15} - %msg%n%rEx</pattern></encoder><immediateFlush>false</immediateFlush></appender><root level="WARN"><appender-ref ref="CONSOLE" /></root></configuration>' >> ./automation/src/test/resources/logback.xml
          ls -al ./automation/src/test/resources
          ls -al ./automation/src/test/resources/accounts

      - name: Start containers
        run: |
          docker-compose -f docker-compose-automation.yml up -d --build
          docker ps

      - name: Build/Run automation tests
        run: |
          cd ./automation
          docker build -f Dockerfile -t automation-consent .
          docker run -v "${PWD}/target":/app/target automation-consent

#      - name: Stop containers
#        if: always()
#        run: |
#          docker-compose -f docker-compose-automation.yml down